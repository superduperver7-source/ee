local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local parts = character:GetDescendants()

local flying = false
local speed = 25

local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")

local flyButton = Instance.new("TextButton")
flyButton.Size = UDim2.new(0,200,0,50)
flyButton.Position = UDim2.new(0,20,0,20)
flyButton.Text = "Toggle Fly"
flyButton.BackgroundColor3 = Color3.fromRGB(50,50,50)
flyButton.TextColor3 = Color3.fromRGB(255,255,255)
flyButton.Parent = screenGui

flyButton.MouseButton1Click:Connect(function()
	flying = not flying
	for _, part in ipairs(parts) do
		if part:IsA("BasePart") then
			part.CanCollide = not flying
		end
	end
end)

RunService.RenderStepped:Connect(function(dt)
	if flying then
		local moveVector = Vector3.zero
		if UserInputService:IsKeyDown(Enum.KeyCode.W) then
			moveVector += hrp.CFrame.LookVector
		end
		if UserInputService:IsKeyDown(Enum.KeyCode.S) then
			moveVector -= hrp.CFrame.LookVector
		end
		if UserInputService:IsKeyDown(Enum.KeyCode.A) then
			moveVector -= hrp.CFrame.RightVector
		end
		if UserInputService:IsKeyDown(Enum.KeyCode.D) then
			moveVector += hrp.CFrame.RightVector
		end
		if moveVector.Magnitude > 0 then
			hrp.CFrame = hrp.CFrame + moveVector.Unit * speed * dt
		end
	end
end)
