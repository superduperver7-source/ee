local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = player:WaitForChild("PlayerGui")

local Toggle = Instance.new("TextButton")
Toggle.Size = UDim2.new(0,200,0,40)
Toggle.Position = UDim2.new(0.05,0,0.1,0)
Toggle.Text = "Invisibility: OFF"
Toggle.BackgroundColor3 = Color3.fromRGB(30,30,30)
Toggle.TextColor3 = Color3.fromRGB(255,255,255)
Toggle.Parent = ScreenGui

local invisibleEnabled = false
Toggle.MouseButton1Click:Connect(function()
	invisibleEnabled = not invisibleEnabled
	Toggle.Text = invisibleEnabled and "Invisibility: ON" or "Invisibility: OFF"
end)

UIS.InputBegan:Connect(function(input, gpe)
	if gpe then return end
	if input.KeyCode == Enum.KeyCode.E then
		invisibleEnabled = true
		Toggle.Text = "Invisibility: ON"
	end
end)
UIS.InputEnded:Connect(function(input, gpe)
	if input.KeyCode == Enum.KeyCode.E then
		invisibleEnabled = false
		Toggle.Text = "Invisibility: OFF"
	end
end)

local function setAvatarTransparency(state)
	for _, part in ipairs(char:GetDescendants()) do
		if part:IsA("BasePart") then
			part.Transparency = state and 1 or 0
		end
		if part:IsA("Accessory") or part:IsA("Hat") then
			part.Handle.Transparency = state and 1 or 0
		end
	end
end

RunService.RenderStepped:Connect(function()
	setAvatarTransparency(invisibleEnabled)
end)

player.CharacterAdded:Connect(function(newChar)
	char = newChar
	hrp = char:WaitForChild("HumanoidRootPart")
end)
